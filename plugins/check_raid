#!/bin/sh
#
# Copyright (C) 2011 Cyril Bouthors <cyril@bouthors.org>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.
#

set -e
set -o pipefail
rc=0

export PATH=$PATH:/sbin:/usr/sbin

# Check software RAID
for md in /dev/md*
do
    [ ! -e $md -o -d $md ] && continue

    if mdadm --detail --test $md >/dev/null 2>/dev/null
    then
	echo -n "$md: OK. "
    else
	echo -n "$md: "
	mdadm --detail --test $md 2>&1 |grep faulty \
	    | sed -e s/.*faulty/faulty/g | tr -d "\n" || true
	echo -n '. '
	rc=2
    fi
done

# Check mptsas RAID
if grep -wFq mptsas /proc/modules
then
    if ! which mpt-status >/dev/null
    then
	echo "$0: unable to find mpt-status"
	exit 2
    fi
    for status in $(mpt-status -s | awk '/^log_id / {print $3}')
    do
	echo -n "MPT status $status. "
	if [ "$status" != 'OPTIMAL' ]
	then
	    rc=2
	fi
    done
fi

# Check mpt2sas RAID
if grep -wFq mpt2sas /proc/modules
then
    if ! which sas2ircu >/dev/null
    then
	echo "$0: unable to find sas2ircu"
	exit 2
    fi
    for status in $(sas2ircu 0 STATUS | awk '/Volume state/ {print $4}')
    do
	echo -n "IRCU status $status. "
	if [ "$status" != 'Optimal' ]
	then
	    rc=2
	fi
    done
fi

# Check 3w_xxxx RAID
if grep -wFq 3w_xxxx /proc/modules
then
    if ! which tw_cli >/dev/null
    then
	echo "$0: unable to find tw_cli"
	exit 2
    fi
    for status in $(tw-cli /c0 show | awk '/^u/ {print $3}')
    do
	echo -n "3w_xxxx status $status. "
	if [ "$status" != 'OK' ]
	then
	    rc=2
	fi
    done
fi

# Check megaraid_sas RAID
if grep -wFq megaraid_sas /proc/modules
then
    if ! which megasasctl >/dev/null
    then
	echo "$0: unable to find megasasctl"
	exit 2
    fi
    for status in $(megasasctl | awk '/RAID/ {print $6}')
    do
	echo -n "megasasctl status $status. "
	if [ "$status" != 'optimal' ]
	then
	    rc=2
	fi
    done
fi

# cciss support with array-info
if grep -wFq cciss /proc/modules
then
    if ! which array-info >/dev/null
    then
	echo "$0: unable to find array-info"
	exit 2
    fi
    for status in $(array-info -d /dev/cciss/c0d0 -a | awk '/Status/ {print $6}')
    do
	echo -n "cciss status $status. "
	if [ "$status" != 'ok' ]
	then
	    rc=2
	fi
    done
fi

echo
exit $rc
