#!/bin/bash
#
# Copyright (C) 2012 Cyril Bouthors <cyril@bouthors.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

warning_threshold=$1
critical_threshold=$2

warning_threshold=80
critical_threshold=90

set -e -o pipefail -u

if [ -z "$warning_threshold" -o -z "$critical_threshold" ]
then
    echo "$0: too few argument" >&2
    echo "Usage: $0 warning_threshold critical_threshold" >&2
    echo "Example: $0 80 90" >&2
    exit 1
fi

# Fetch disk usage data
tempfile=$(tempfile)
trap "rm -f $tempfile" EXIT HUP INT TRAP TERM

(
    # Fetch blocks information
    df -PlTh

    # Fetch inodes information
    echo 'INODES'
    df -PlThi
) > $tempfile

rc=0
units='B'
while read fs type size used available percentage mount_point
do
    # Check if mount point exists
    if [ "$fs" = 'Filesystem' ]
    then
	continue
    fi

    if [ "$fs" = 'INODES' ]
    then
	units=' inodes'
	continue
    fi

    percentage=${percentage%\%}
    if [ "$percentage" -ge "$critical_threshold" ]
    then
	echo -n "$mount_point is ${percentage}% full, "
	echo -n "$available$units available. "
	rc=2
	continue
    fi

    if [ "$percentage" -ge "$warning_threshold" ]
    then
	echo -n "$mount_point is ${percentage}% full, "
	echo -n "$available$units available. "
	if [ "$rc" -eq 0 ]
	then
	    rc=1
	fi
	continue
    fi
done < $tempfile

if [ "$rc" -eq 0 ]
then
    echo -n 'OK'
fi

echo
exit $rc
